name: CI/CD Pipeline

on:
  push:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    # Grant write permission to push the docker images.
    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Normalize owner to lowercase
        run: echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build and push each service image
      - name: Build and push article-service image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./services/article-service/Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/article-service:${{ github.run_number }}

      - name: Build and push comment-service image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./services/CommentService/Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/comment-service:${{ github.run_number }}

      - name: Build and push profanity-service image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./services/ProfanityService/Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/profanity-service:${{ github.run_number }}

      - name: Build and push comment-cleaner image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./services/CommentCleaner/Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/comment-cleaner:${{ github.run_number }}

      - name: Build and push draft-service image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./services/DraftService/Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/draft-service:${{ github.run_number }}

      - name: Build and push publisher-service image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./services/PublisherService/Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/publisher-service:${{ github.run_number }}

      - name: Build and push newsletter-service image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./services/NewsletterService/Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/newsletter-service:${{ github.run_number }}

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Run CommentService tests
        run: mvn -B -q -f services/CommentService/pom.xml test


      # Rollback step if tests failed
      - name: Rollback on test failure
        if: steps.test.outcome == 'failure'
        run: |
          echo "Tests failed â€“ reverting to last successful Docker images"
      # Some sexy rollback code here

      # Mark the job as failed if the tests failed
      - name: Finish with failure
        if: steps.test.outcome == 'failure'
        run: exit 1
