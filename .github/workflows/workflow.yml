name: CI/CD Pipeline

# Trigger on pushes to master branc
on:
  push:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    # Grant write permission to push packages (Docker images)
    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io
      OWNER_LC: ${{ toLower(github.repository_owner) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build and push each service image
      - name: Build and push article-service image
        uses: docker/build-push-action@v4
        with:
          context: ./services/article-service
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/article-service:${{ github.run_number }}

      - name: Build and push comment-service image
        uses: docker/build-push-action@v4
        with:
          context: ./services/CommentService
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/comment-service:${{ github.run_number }}

      - name: Build and push profanity-service image
        uses: docker/build-push-action@v4
        with:
          context: ./services/ProfanityService
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/profanity-service:${{ github.run_number }}

      - name: Build and push comment-cleaner image
        uses: docker/build-push-action@v4
        with:
          context: ./services/CommentCleaner
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/comment-cleaner:${{ github.run_number }}

      - name: Build and push draft-service image
        uses: docker/build-push-action@v4
        with:
          context: ./services/DraftService
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/draft-service:${{ github.run_number }}

      - name: Build and push publisher-service image
        uses: docker/build-push-action@v4
        with:
          context: ./services/PublisherService
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/publisher-service:${{ github.run_number }}

      - name: Build and push newsletter-service image
        uses: docker/build-push-action@v4
        with:
          context: ./services/NewsletterService
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/newsletter-service:${{ github.run_number }}

      # Run the tests for CommentService
      - name: Run CommentService tests
        id: test
        working-directory: services/CommentService
        run: |
          ./mvnw test
        continue-on-error: true

      # Rollback step if tests failed
      - name: Rollback on test failure
        if: steps.test.outcome == 'failure'
        run: |
          echo "Tests failed â€“ reverting to last successful Docker images"
          # (In a real workflow, add commands to re-deploy the previous images here.)

      # Mark the job as failed if the tests failed
      - name: Finish with failure
        if: steps.test.outcome == 'failure'
        run: exit 1
